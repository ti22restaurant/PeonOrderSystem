#! /usr/bin/env python
# -*- Mode: Python; coding: utf-8; indent-tabs-mode: nil; tab-width: 4 -*-
### BEGIN LICENSE
# This file is in the public domain
### END LICENSE

from gi.repository import Gtk

from exe import path

""" Creates, displays and runs an Entry Dialog where the user can
    manipulate the Note stored on the given MenuItem.
"""

class NoteEntryDialog():
    def __init__(self, parent, menu_item):
        
        """Generates seperate window to display and run the EntryDialog.
        """
        # reconsider the XML usage here. This could be generalized
        #   instead as a subclass of ButtonEntryDialog.
        xml_file = path.SYSTEM_XML_PATH + 'NoteEntryDialog.ui'
        
        builder = Gtk.Builder()
        builder.add_from_file(xml_file)
        builder.connect_signals(self)
        
        self.menu_item = menu_item
        
        self.dialog = builder.get_object('noteEntryDialog')
        self.dialog.set_title('NOTE EDITOR')
        self.dialog.set_transient_for(parent)
        self.dialog.set_default_size(400, 400)
        
        menu_label = builder.get_object('menuNoteLabel')
        if menu_item.has_note:
            menu_label.set_text(menu_item.notes)
        
        item_label = builder.get_object('menuItemLabel')
        item_label.set_text(menu_item.get_name())
        
        self.dialog.show_all()
        self.dialog.run()
    
    # gtk_entry is passed in via a GLADE generated XML file. This needs
    #   to be modified to not rely on the XML file information.
    def confirm_dialog(self, gtk_entry):
        """Sets the entered note as the MenuItem's current note,
            then closes the window.
        """
        self.menu_item.notes = gtk_entry.get_text()
        self.cancel_dialog(None)
    
    def cancel_dialog(self, *args):
        """Closes the window, does not update MenuItem's note"""
        self.dialog.destroy()
