#! /usr/bin/env python
# -*- Mode: Python; coding: utf-8; indent-tabs-mode: nil; tab-width: 4 -*-
### BEGIN LICENSE
# This file is in the public domain
### END LICENSE

from gi.repository import Gtk

class MenuConfirmationDialog(Gtk.Dialog):

    def __init__(self, parent, title):
        super(MenuConfirmationDialog, self).__init__(title=title, 
            parent=parent)
        self.set_default_size(500, 700)
        self.add_buttons("SEND TO KITCHEN",    
            Gtk.ResponseType.ACCEPT, Gtk.STOCK_CANCEL, 
            Gtk.ResponseType.CANCEL)

class ConfirmationDialog(MenuConfirmationDialog):
    
    def __init__(self, parent, current_order):
        super(ConfirmationDialog, self).__init__(parent, 
            'CONFIRM ORDER DIALOG')
        content_area = self.get_content_area()
        
        tree_view = Gtk.TreeView()
        
        cell = Gtk.CellRendererText()
        name_column = Gtk.TreeViewColumn("Menu Item", cell, text=0)
        tree_view.append_column(name_column)
        
        cell1 = Gtk.CellRendererText()
        stars_column = Gtk.TreeViewColumn("Stars", cell1, text=1)
        tree_view.append_column(stars_column)
        
        scrolled_window = Gtk.ScrolledWindow()
        content_area.pack_start(scrolled_window, True, True, 5)
        scrolled_window.add(tree_view)
        
        tree_store = Gtk.TreeStore(str, str)
        
        for menu_item in current_order:
            if not menu_item.confirmed:
                itr = tree_store.append(None, (menu_item.get_name(),
                        str(menu_item.stars)))
                options = menu_item.options
                for items in options:
                    tree_store.append(itr,(items, ""))
                if menu_item.has_note():
                    tree_store.append(itr,(menu_item.notes, ""))
        
        tree_view.set_model(tree_store)
        
        self.show_all()
        self.run()

class CheckoutDialog(MenuConfirmationDialog):
    
    def __init__(self, parent, current_order):
        super(CheckoutDialog, self).__init__(self, parent,
            "CHECKOUT DIALOG")
        
        content_area = self.get_content_area()
        scrolled_window = Gtk.ScrolledWindow()
        
            
        
        
        
