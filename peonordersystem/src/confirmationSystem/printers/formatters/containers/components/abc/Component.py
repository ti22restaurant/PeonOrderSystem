"""This module defines the abstract base
class Component

@author: Carl McGraw
@contact: cjmcgraw( at )u.washington.edu
@version: 1.0
"""
from abc import ABCMeta, abstractproperty

from reportlab.lib.styles import getSampleStyleSheet

from peonordersystem.src.confirmationSystem.printers.formatters.PrinterSettings \
    import DEFAULT_FRONT_PRINTER_WIDTH


class Component(object):
    """Describes the functionality
    required for an object to be a
    useable Component in a container.
    """
    __metaclass__ = ABCMeta

    DEFAULT_PARAGRAPH_STYLE = getSampleStyleSheet()['Normal']
    DEFAULT_WIDTH = DEFAULT_FRONT_PRINTER_WIDTH

    def __init__(self, flowables=[]):
        """Initializes the new Component.

        @keyword flowables: list of
        reportlab.platypus.flowable.Flowable
        objects that represent the flowables
        to be associated with this component.
        """
        self._flowables = flowables

    @abstractproperty
    def width(self):
        """Gets the width
        of the Component area.

        @return: float representing
        the width.
        """
        pass

    @abstractproperty
    def height(self):
        """Gets the height of the
        Component area.

        @return: float representing
        the height.
        """
        pass

    @property
    def flowables(self):
        """Gets a list of flowables
        that represents the flowables
        generated by the component
        area.

        @return: list of
        reportlab.platypus.flowable.Flowable
        objects.
        """
        return list(self._flowables)
